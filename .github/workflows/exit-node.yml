name: Linux High-Speed Exit Node (Final Attempt)

on:
  # Allows you to manually trigger the workflow
  workflow_dispatch:

jobs:
  exit_node:
    # Use a Linux runner for kernel-level performance
    runs-on: ubuntu-latest 
    timeout-minutes: 3600

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Use the official action with only supported flags for 'tailscale up'
      - name: Setup Tailscale Exit Node
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}
          # Removed the unsupported flags --netcheck and --test-no-derp
          args: --hostname=gh-linux-exit-node-${{ github.run_id }} --advertise-exit-node
          
      - name: Run Tailscale Netcheck (Separate Step)
        run: |
          echo "Running Tailscale Netcheck to diagnose connectivity..."
          # Run the netcheck command separately, which is supported by the CLI
          tailscale netcheck
          
      - name: Verify Tailscale Status
        run: |
          echo "Checking Tailscale status..."
          tailscale status
          
      - name: Maintain Connection & Display Info
        run: |
          # Use the official CLI command to get the IP
          TS_IP=$(tailscale ip -4)
          
          echo "====================================================="
          echo "ðŸš€ Linux Exit Node is ACTIVE and awaiting approval."
          echo "Machine Name: gh-linux-exit-node-${{ github.run_id }}"
          echo "Tailscale IP: $TS_IP"
          echo "====================================================="
          echo "REMINDER: Approve this machine as an Exit Node in the Tailscale Admin Console."
          
          # Keep runner active indefinitely (or until manually cancelled)
          while true; do
            echo "[$(date)] Exit Node Active - Use 'Cancel workflow' to terminate."
            sleep 300
          done
